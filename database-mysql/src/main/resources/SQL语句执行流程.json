[
    "各位同学，大家好啊",
    "这一小节呢，我们来讲解和研究啊",
    "一个 SQL 语句",
    "他是怎么执行的",
    "它的执行流程是怎样的",
    "其实在前两小节的讲解当中啊",
    "我们已经涉及到了一部分",
    "那这一小节呢，我们再详细的说说执行的流程",
    "这个呢，表啊",
    "这个图表就是我们之前跟大家看的",
    "但是不一样的是呢",
    "这个老师给做了一个编号",
    "这个编号呢，其实就是一个 SQL 语句",
    "它执行的过程我们一步一步的看",
    "首先第一步是什么",
    "连接器对吧",
    "之前老师也讲过",
    "连接器就是起一个监听",
    "监听这个客户端的请求",
    "请求之后",
    "连接器它的任务就完成了",
    "他就把客户端的指令",
    "还有 SQL 语句转发给那儿缓存",
    "首先连接器就要去查询缓存",
    "那么缓存是个什么东西呢",
    "我们来看一下",
    "这个缓存啊",
    "是将之前执行过的语句",
    "以 KV 的形式缓存在内存当中",
    "也就是说",
    "比如之前有个客户端执行了 select 星 from table t ",
    "这样的话呢，它的结果就是 V ",
    "它的结果那些行的数据就是 V ",
    "K 是什么啊",
    "这个键是什么",
    "键是 SQL 语句本身",
    "也就是说它缓存了之前执行过的 SQL 语句",
    "和这个 SQL 语句的结果",
    "它的这个用途和这个目的是好的",
    "大家也能体会的到",
    "如果我刚刚执行过啊，一个 SQL 查询",
    "那么我就不用再麻烦的把它执行一遍了啊",
    "如果另一个人过来再跑一个相同的 SQL 语句",
    "我直接把缓存过的这个结果返回回去就可以了",
    "所以说这个缓存的目的就是什么呢",
    "就是查询先前查找过的这种语句的时候",
    "它会快速的返回结果",
    "但是大家想一想",
    "这个缓存是不是有点问题啊",
    "有什么问题呢",
    "大家平时在编写这个业务代码的时候",
    "肯定绝大多数同学也用过缓存对吧",
    "比如说 REDIS ",
    "你的业务在查询数据库的时候",
    "把这个结果除了返回给前端",
    "还把这个结果缓存在 REDIS 上一份",
    "那么下一次如果有相同的请求啊",
    "相同的查询过来",
    "你是不是直接从 REDIS 里面把结果取出来",
    "直接返回给前端了",
    "这个流程大家都熟悉",
    "但是有个问题就是缓存失效的问题",
    "每一次用户修改这个值的时候",
    "修改这个数据的时候",
    "你是不是都要把缓存给删掉",
    "删掉缓存",
    "因为它的缓存失效要更新了",
    "那这个地方也有一样的问题",
    "就是说当数据表修改之后",
    "它的跟数据表所有相关的缓存都会被删掉",
    "这个力度非常非常的宽",
    "它不是行相关的",
    "而是数据表相关的",
    "你想一个在线的业务系统",
    "它数据表的更新频率是不是非常非常高",
    "一个数据表的数据永远什么都不动啊",
    "静态的情况下",
    "它能维持的时间是很短很短的",
    "也就是说我们的 MYSQL 自己的这个缓存",
    "是很容易失效的",
    "这个 SQL 语句的缓存",
    "后面我们会讲别的缓存",
    "但是对于这个缓存来说",
    "SQL 语句的缓存它失效的会非常快",
    "所以说这个缓存后来发现",
    "确实有的时候不太好用",
    "后面就直接推荐大家给关掉了",
    "因为这个缓存记了也白记",
    "不推荐使用",
    "你这个缓存刚缓存上",
    "后面这个表一更新",
    "缓存又得删掉",
    "白白浪费 CPU ",
    "所以说呢",
    "在 MYSQL 8.0以后",
    "8.0开始",
    "缓存的功能已经去掉",
    "这是查询缓存",
    "这一步我们再往后看",
    "第三，这就是什么分析器、分析器、优化器、执行器这个流程",
    "第一步就是分析器",
    "分析器是做什么的呢",
    "分析器是需要分析你要干什么",
    "就是你的一个 SQL 语句过来啊",
    "select 或者是 delete 或者 insert ",
    "分析器要知道你这一句话要干什么",
    "他先做词法分析",
    "就是识别 SQL 语句中的关键字",
    "比如说 select 呀、 john 啊、 update 呀这些",
    "然后再做句法分析",
    "也就是说从句子的角度分析",
    "你这个 SQL 语句是否符合语法啊",
    "你这个句子要干什么",
    "比如说你这个句子可能有个括号",
    "里面有一个子查询",
    "或者是有个中文两个表连表",
    "它要分析出来你要干什么",
    "分析器就是分析你要干什么",
    "分析完你要干什么了",
    "他要进行优化啊",
    "他要干嘛",
    "优化器要进行优化",
    "为什么要优化呢",
    "同样的目的、不同的做法和不同的路径",
    "它的结果、它的效果是完全不一样的啊",
    "我们后面讲后面的这个章节",
    "你就会发现",
    "同样的 SQL 语句",
    "MYSQL 把它优化的程度不一样",
    "它执行的效率是天壤地别的",
    "所以优化器的作用就是要知道这个 SQL 语句",
    "他怎么做",
    "他怎么做这个查询",
    "怎么执行你的这个指令",
    "他的最最主要的工作",
    "也是跟我们最密切相关的工作之一",
    "就是决定如何使用索引",
    "也就是说一张表它有主键索引",
    "可能还有很多这种辅助的索引",
    "那这些索引怎么去使用",
    "先使用哪个再使用哪个",
    "都是优化器去决定的啊",
    "也就是说，如果大家后面优化 C 货的时候",
    "发现该走的",
    "所以没有走",
    "那是谁的锅啊",
    "当然首先是我们的锅",
    "优化器的锅",
    "我们的 SQL 语句没写好",
    "不知道怎么用",
    "是这个客户的锅",
    "但是除了客户以外",
    "就主要就是 MYSQL 优化器的问题",
    "其实 MYSQL 优化器也不是一个十全十美的优化器",
    "他自己也有很多缺陷",
    "那么我们在平时开发的时候",
    "要知道它的缺陷",
    "甚至要利用它的缺陷来做一些高性能的查询",
    "那好，优化器优化了之后",
    "他决定怎么使用索引",
    "怎么执行这个计划",
    "得计划好了",
    "比如说你这个 SQL 非常的复杂",
    "有子查询、有复查询",
    "然后有连表这种",
    "他决定怎么连",
    "怎么走索引",
    "怎么先走子查询，再走父查询",
    "他决定好了这个计划之后呢",
    "就把这个计划推给了执行器",
    "执行器是做什么的",
    "大家看这个第五步",
    "执行器它后面直接跟的什么",
    "直接跟存储引擎对吧",
    "那执行器其实就是存储引擎的前一步",
    "他就直接调用存储引擎的",
    "它的主要工作就是校验权限",
    "然后调用存储引擎",
    "那校验权限是做什么的",
    "首先要校验用户对目标数据有没有权限",
    "比如说你在生产环境里面",
    "这个运维肯定不可能给你 root ",
    "他给你你自己这个应用所用的一个账户",
    "那这个账户呢，它有不同的权限",
    "他可以读哪个表",
    "它可以写哪个表",
    "那首先要检验这个用户对目标数据有没有权限啊",
    "检验过了之后呢",
    "那执行器会以行为力度调用存储引擎",
    "执行 C 功啊",
    "比如说我们要查询一堆数据",
    "也就是说",
    "那么执行器会一个个去调用存储引擎",
    "然后存储引擎会一个个的把数据",
    "一条一条的返回给执行器",
    "那在没有索引的情况下啊",
    "也就是我们最常遇到的性能问题的情况下",
    "就是没走索引",
    "每组索引执行器会循环查询所有卡啊",
    "比如说我们查一个 SQL ",
    "就是比如 select 星 from table ",
    "年龄大于十",
    "如果这个年龄没有索引的情况下",
    "那执行器怎么办",
    "执行器就会按照主键索引",
    "就按照 id 他一个个取",
    "他把 id 等于一的取出来",
    "id 等于二的取出来",
    "id 等于三的取出来，取出来",
    "从这个 inno dB 存储引擎取出来之后",
    "他判断 A 值就是这个年龄是不是大于十",
    "它丢弃是大于十",
    "如果不是大于十",
    "把它存起来",
    "所以说没有索引的时候",
    "这种查询效率会非常低",
    "这也是我们后面优化的地方",
    "好，这是执行器的功能",
    "下一步呢，就是六啊",
    "inno dB 就是这个存储引擎啊",
    "我是只拿1 ino dB 拿出来讲了啊",
    "其实 my iem 、 ARCAVE 啊、 memory 啊",
    "它都是啊， MYSQL 的存储引擎",
    "但是我们现在不管是业务开发还是面试什么的",
    "90%以上都是以 ino dB 为主",
    "所以我们整个的这个课程啊",
    "也是以这个 ino dB 为主",
    "好，我们拿出来印度 dB 看一下",
    "这个存储引擎啊",
    "他的任务是什么",
    "它的任务是执行器的指令落实在数据文件上",
    "也就是说执行器想取 id 等于一的那行数据",
    "执行器是不管数据怎么存在文件上的",
    "怎么存在文件上",
    "都是存储引擎去负责",
    "那存储引擎要把文件上 id 等于一",
    "这条数据取出来还给执行器",
    "然后执行器要插入一条数据的时候",
    "它调用存储引擎",
    "存储引擎要把执行器要插入的这条数据",
    "原原本本的落在数据文件上",
    "那这就是存储引擎的最大的作用",
    "但是大家前面也看到了",
    "就是不同的存储引擎",
    "它的原理和执行方法其实是有很大不同的啊",
    "比如 inno dB 啊",
    "my eism ，它的数据结构不一样",
    "但是他因为一个有事物",
    "一个没事物",
    "所它运行的方式是有非常大的不同",
    "所以说我们后面下一个小节",
    "就要详细分析一下",
    "不同的存储引擎",
    "它的不同点在哪里",
    "好，总结一下这一小节的内容",
    "首先， SQL 语句执行的过程",
    "涉及到了 MYSQL 几乎所有的模块",
    "刚才也看到了一个 SQL 语句",
    "是按照分析、优化、执行落盘的步骤执行的",
    "我先分析你的这个 SQL 语句要做什么",
    "也就是说",
    "然后优化是怎么做",
    "执行是怎么执行",
    "落盘就是存储引擎去给你落实",
    "在文件上是按这个顺序执行",
    "还有一个大家要注意的就是",
    "MYSQL 8.0之后已经停用了缓存",
    "这里的缓存是 server 层的啊， SQL 的缓存",
    "这个 MYSQL 里面存在很多种的缓存",
    "大家不要弄混了啊",
    "然后8.0之前",
    "比如说大家现在可能开发用这个5.6",
    "5.7是最多的",
    "5.6、5.7也推荐关掉这个缓存",
    "不同存储引擎的执行方法是有很大不同的",
    "所以我们接下来的这个小节呢",
    "就要去看一下",
    "研究一下不同的存储引擎它的异同点",
    "好，谢谢大家",
    "3-6"
]